import os
from cgtscons import SONLIB_LIB_NAME, CUTEST_LIB_NAME, TEST_BIN_DIR, RUN_DIR
from cgtscons import getSrcPaths, buildStaticLibrary, linkTestProg, linkProg, envRelSymlink
from cgtscons import libAddSonLib, libAddCuTest, libAddKyotoDatabase

# clone to avoid modifying parent enviroment
Import("env",)
env = env.Clone()

inclDirs = ["lz4", "quicktree/include", "sonlib/include", "cutest"]
env.Append(CPPPATH=inclDirs)

##
# sonlib
##
# only compile a subset of quicktree
quicktreeCFiles = ("align.c", "cluster.c", "distancemat.c",
                   "distancemat_merops.c", "options.c", "sequence.c",
                   "tree.c", "buildtree.c", "util.c")
quicktreeSrcs = [os.path.join("quicktree/src", f) for f in 
                 ("align.c", "cluster.c", "distancemat.c",
                  "distancemat_merops.c", "options.c", "sequence.c",
                  "tree.c", "buildtree.c", "util.c")]
lz4Srcs = ["lz4/lz4.c", "lz4/lz4hc.c"]
sonLibSrcs = Glob("sonlib/src/*.c") + Glob("sonlib/src/*.cpp")
buildStaticLibrary(env, SONLIB_LIB_NAME, sonLibSrcs + quicktreeSrcs + lz4Srcs)

##
# cutest
##
cutestSrcs = ["cutest/CuTest.c", "cutest/CuTestTest.c"]
buildStaticLibrary(env, CUTEST_LIB_NAME, cutestSrcs)

##
# sonlib tests
##
slTestEnv = env.Clone()
libAddSonLib(slTestEnv)
libAddCuTest(slTestEnv)
libAddKyotoDatabase(slTestEnv)

# need special flags for anything including kyoto typhoon, etc headers
slKtTestEnv = slTestEnv.Clone()
slKtTestEnv.Append(CXXFLAGS=["-fpermissive", "-Wno-overflow", "-Wno-unused-but-set-variable",
                             "-Wno-conversion-null", "-Wno-narrowing"])

testSrcDir = "sonlib/tests"
linkTestProg(slTestEnv, "sonLib_Tests",
             getSrcPaths(testSrcDir,
                         ["allTests.c", "sonLibAlignTest.c", "sonLibCommonTest.c",
                          "sonLibCompressionTest.c", "sonLibConnectivityTests.c",
                          "sonLibDoubleTuplesTest.c", "sonLibEdgeContainerTests.c",
                          "sonLibEulerTest.c", "sonLibExceptTest.c", "sonLibFileTest.c",
                          "sonLibGraphTest.c", "sonLibHashTest.c",
                          "sonLibIntTuplesTest.c", "sonLibListTest.c",
                          "sonLibPosetAlignmentTest.c", "sonLibRandomTest.c",
                          "sonLibSetTest.c", "sonLibSortedSetTest.c",
                          "sonLibStringTest.c", "sonLibTreapTest.c", "sonLibTreeTest.c",
                          "sonLibTuplesTest.c", "stMatrixTest.c", "stPhylogenyTest.c",
                          "stThreadPoolTest.c", "stUnionFindTest.c", "sonLibCacheTest.c"]))
linkTestProg(slTestEnv, "sonLib_cigarsTest",
             getSrcPaths(testSrcDir, ["cigarsTest.c"]))
linkTestProg(slTestEnv, "sonLib_fastaCTest",
             getSrcPaths(testSrcDir, ["fastaCTest.c"]))
linkTestProg(slKtTestEnv, "sonLib_kt_connect_test",
             getSrcPaths(testSrcDir, ["kt_connect_test.cpp"]))
linkTestProg(slKtTestEnv, "sonLib_kvDatabaseTest",
             getSrcPaths(testSrcDir, ["kvDatabaseTest.c", "kvDatabaseTestCommon.c"]))


##
# blossom5 program
##
blEnv = env.Clone()
blEnv.Append(CXXFLAGS=["-fpermissive"])
linkProg(env, "blossum5",
         Glob("blossom/*.cpp") + Glob("blossom/GEOM/*.cpp") + Glob("blossom/MinCost/*.cpp"))




###
# python code
###
#envRelSymlink(env, "#/mods/sonLib/py/cgt/sonLib", "./lib/py/cgt/sonLib")
# FIXME: env.SymLink("./lib/py/cgt/sonLib", "#/mods/sonLib/py/cgt/sonLib")


##
# install in final location
##
#env.Install(RUN_DIR, "sonlib/include")
#env.Install(RUN_DIR, "./lib")
